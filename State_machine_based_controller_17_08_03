// Controller for solarXbike pedal chaged media player
// State machine code


int sensorIGenPin = A0;    // select the input pin for the generator current sensor
int sensorIChaPin = A1;    // select the input pin for the charger current sensor
int manual_input = 2;      // select the pin to manual mode media player
int player_button1 = 11;   // select the pin for button1 on media player
int player_button2 = 12;   // select the pin for button2 on media player
int player_button3 = 13;   // select the pin for button3 on media player
int sensorIGenValue = 0;   // variable to store the value coming from the generator current sensor
int sensorIGenZero = 0;    // variable to store the reference value from the generator current sensor
int sensorIGenDiff = 4;    // variable current sensor diff value
int sensorIChaValue = 0;   // variable to store the value coming from the charger current sensor
int temp;

int SM_main_state;
boolean SM_main_new_state = false;


void setup() {
  // declare GPIO:
  pinMode(manual_input, INPUT_PULLUP);
  
  pinMode(player_button1, OUTPUT);
  pinMode(player_button2, OUTPUT);
  pinMode(player_button3, OUTPUT);

  // activate GPIO:
  digitalWrite(player_button1, HIGH);
  digitalWrite(player_button2, HIGH);
  digitalWrite(player_button3, HIGH);

  Serial.begin(9600);

  delay(1000); 
  Serial.println("Smart Controller running");
  Serial.println();
  sensorIGenZero = analogRead(sensorIGenPin);
  Serial.print("Pedal current sensor reference integer = ");
  Serial.println(sensorIGenZero);
 
  sensorIChaValue = analogRead(sensorIChaPin);
  Serial.print("Grid charger current sensor integer value = ");
  Serial.print(sensorIChaValue);
  Serial.print(". approx = ");
  temp = ( sensorIGenZero - sensorIChaValue * 74 );
  Serial.print(temp);
  Serial.println(" mA");
 
  
  
}

/*
  State machine by using Switch statement

  Demonstrates the use of a switch statement. The switch statement allows you
  to choose from among a set of discrete values of a variable. It's like a
  series of if statements.

  To see this sketch in action, put the board and sensor in a well-lit room,
  open the Serial Monitor, and move your hand gradually down over the sensor.

  

  - photoresistor from analog in 0 to +5V
  - 10K resistor from analog in 0 to ground

  created 1 Jul 2009
  modified 9 Apr 2012
  by Tom Igoe

  This example code is in the public domain.


  The circuit:
  http://www.arduino.cc/en/Tutorial/SwitchCase
*/


void loop() {
    // read the value from the current sensors:
  sensorIGenValue = analogRead(sensorIGenPin);
  sensorIChaValue = analogRead(sensorIChaPin);

  if (sensorIGenValue < (sensorIGenZero - sensorIGenDiff))
     {
      // turn the ledPin on
      digitalWrite(player_button3, HIGH);
     }
  else
     {
     // turn the ledPin off
      digitalWrite(player_button3, LOW);
     }
     
 
  SM_main_state = SM_main ( SM_main_state);
  temp = 7;
  if ( digitalRead(manual_input) == 1 ) 
    { 
    temp = SM_main_state;
    }
  else
    {
    Serial.print("MANUELLT LÄGE");
     }
     
    digitalWrite(11, bitRead(temp, 2));
    digitalWrite(12, bitRead(temp, 1));
    digitalWrite(13, bitRead(temp, 0));

  // SM_main_state++;

  delay(1000);        // delay in between reads for stability
}


  // Main state machine
  int SM_main (int state_old){
    int state;
   
    // Transit conditions ***************************************** TRANSIT CONDITIONS
    switch (state_old)  {
      case 0:
        state = state_old + 1;
        break;
      case 1:
        state = state_old + 1;
        break;
      case 2:
        state = state_old + 1;
        break;
      case 3:
        state = state_old + 1;
        break;
      case 4:
        state = state_old + 1;
        break;
      case 5:
        state = state_old + 1;
        break;
      case 6:
        state = state_old + 1;
        break;
      case 7:
        state = 0;
        break;    

    }
  delay(1000);   
      SM_main_new_state = (state != state_old); // True only when state transition occurs
      
      if (SM_main_new_state) // EXIT and ENTER state actions
      {
      // EXIT old state actions ******************************************************** EXIT STATE
      switch (state_old)  {
        case 0:
          // to do when exiting state
          Serial.println("Exit odokumenterat tillstånd 0");
          break;
        case 1:
          // to do when exiting state
          Serial.println("Exit Visa Loading");
          break;
        case 2:
          // to do when exiting state
          Serial.println("Exit odokumenterat tillstånd 2");
           break;
        case 3: 
          // to do when exiting state
          Serial.println("Exit odokumenterat tillstånd 3");
          break;
        case 4: 
          // to do when exiting state
          Serial.println("Exit Paus i film");
          break;
        case 5:
          // to do when exiting state
          Serial.println("Exit Visa film");
           break;
        case 6: 
          // to do when exiting state
          Serial.println("Exit Släck (paus) display");
          break;
        case 7: 
          // to do when exiting state
          Serial.println("Exit Visa tre filmer i sekvens");
          break;
        }
  delay(1000);   
      // ENTER new state actions **************************************************** ENTER STATE
      switch (state)  {
        case 0:
          // to do when exiting state
          Serial.print("Enter odokumenterat tillstånd 0, ");
          break;
        case 1:
          // to do when exiting state
          Serial.print("Enter Visa Loading, ");
          break;
        case 2:
          // to do when exiting state
          Serial.print("Enter odokumenterat tillstånd 2, ");
           break;
        case 3: 
          // to do when exiting state
          Serial.print("Enter odokumenterat tillstånd 3, ");
          break;
        case 4: 
          // to do when exiting state
          Serial.print("Enter Paus i film, ");
          break;
 
        case 5:
          // to do when exiting state
          Serial.print("Enter Visa film, ");
           break;
        case 6: 
          // to do when exiting state
          Serial.print("Enter Släck (paus) display, ");
          break;
        case 7: 
          // to do when exiting state
          Serial.print("Enter Visa tre filmer i sekvens, ");
          break;
        }
      }
   delay(1000);          
    // IN state actions ********************************************************** IN STATE
    switch (state)  {
        case 0:
          // to do when exiting state
          Serial.print("odokumenterat tillstånd 0, ");
          break;
        case 1:
          // to do when exiting state
          Serial.print("Visa Loading, ");
          break;
        case 2:
          // to do when exiting state
          Serial.print("odokumenterat tillstånd 2, ");
           break;
        case 3: 
          // to do when exiting state
          Serial.print("odokumenterat tillstånd 3, ");
          break;
        case 4: 
          // to do when exiting state
          Serial.print("Paus i film, ");
          break;
        case 5:
          // to do when exiting state
          Serial.print("Visa film, ");
           break;
        case 6: 
          // to do when exiting state
          Serial.print("Släck (paus) display, ");
          break;
        case 7: 
          // to do when exiting state
          Serial.print("Visa tre filmer i sekvens, ");
          break;
      }
      return state;
     }

